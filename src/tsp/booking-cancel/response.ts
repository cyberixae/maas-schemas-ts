/*

undefined
Response schema for canceling a booking through a TSP adapter

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as Booking_ from 'src/core/booking';
import * as BookingOption_ from 'src/core/booking-option';

export const schemaId = 'http://maasglobal.com/tsp/bookings-cancel/response.json';
// Default
// The purpose of this remains a mystery
export type Default = t.Branded<
  {
    tspId: Booking_.TspId;
    state: 'CANCELLED' | 'RESERVED';
    cost?: Booking_.Cost;
    leg?: BookingOption_.Leg;
    meta?: Booking_.Meta;
    terms?: Booking_.Terms;
    token?: Booking_.Token;
    tspProduct?: BookingOption_.TspProduct;
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.type({
      tspId: Booking_.TspId,
      state: t.union([t.literal('CANCELLED'), t.literal('RESERVED')]),
    }),
    t.partial({
      cost: Booking_.Cost,
      leg: BookingOption_.Leg,
      meta: Booking_.Meta,
      terms: Booking_.Terms,
      token: Booking_.Token,
      tspProduct: BookingOption_.TspProduct,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      tspId: Booking_.TspId;
      state: 'CANCELLED' | 'RESERVED';
      cost?: Booking_.Cost;
      leg?: BookingOption_.Leg;
      meta?: Booking_.Meta;
      terms?: Booking_.Terms;
      token?: Booking_.Token;
      tspProduct?: BookingOption_.TspProduct;
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
