/*

undefined
MaaS Invoice schema

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as Units_ from 'src/core/components/units';
import * as InvoiceLineItem_ from 'src/maas-backend/invoices/invoiceLineItem';

export const schemaId = 'http://maasglobal.com/maas-backend/invoices/invoice.json';
// InvoiceId
// The purpose of this remains a mystery
export type InvoiceId = t.Branded<string, InvoiceIdBrand>;
export const InvoiceId = t.brand(
  t.string,
  (x): x is t.Branded<string, InvoiceIdBrand> => typeof x !== 'string' || x.length >= 2,
  'InvoiceId',
);
export interface InvoiceIdBrand {
  readonly InvoiceId: unique symbol;
}
// Invoice
// The purpose of this remains a mystery
export type Invoice = t.Branded<
  {
    id?: InvoiceId;
    customerId?: Units_.IdentityId;
    bookingId?: Units_.Uuid;
    lineItems?: Array<InvoiceLineItem_.InvoiceLineItem>;
  } & {
    id: unknown;
    customerId: unknown;
    bookingId: unknown;
    lineItems: unknown;
  },
  InvoiceBrand
>;
export const Invoice = t.brand(
  t.intersection([
    t.partial({
      id: InvoiceId,
      customerId: Units_.IdentityId,
      bookingId: Units_.Uuid,
      lineItems: t.array(InvoiceLineItem_.InvoiceLineItem),
    }),
    t.type({
      id: t.unknown,
      customerId: t.unknown,
      bookingId: t.unknown,
      lineItems: t.unknown,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      id?: InvoiceId;
      customerId?: Units_.IdentityId;
      bookingId?: Units_.Uuid;
      lineItems?: Array<InvoiceLineItem_.InvoiceLineItem>;
    } & {
      id: unknown;
      customerId: unknown;
      bookingId: unknown;
      lineItems: unknown;
    },
    InvoiceBrand
  > => true,
  'Invoice',
);
export interface InvoiceBrand {
  readonly Invoice: unique symbol;
}
// Default
// The default export. More information at the top.
export type Default = t.Branded<unknown, DefaultBrand>;
export const Default = t.brand(
  t.unknown,
  (x): x is t.Branded<unknown, DefaultBrand> => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
