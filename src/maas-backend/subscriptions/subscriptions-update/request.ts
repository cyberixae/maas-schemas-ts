/*

undefined
Request schema for subscriptions-update

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as Units_ from 'src/core/components/units';
import * as Subscription_ from 'src/maas-backend/subscriptions/subscription';
import * as ApiCommon_ from 'src/core/components/api-common';

export const schemaId =
  'http://maasglobal.com/maas-backend/subscriptions/subscriptions-update/request.json';
// Default
// The default export. More information at the top.
export type Default = t.Branded<
  {
    customerId: Units_.IdentityId;
    userId: Units_.IdentityId;
    replace?: boolean;
    immediate?: boolean;
    payload: Subscription_.SubscriptionUpdatePayload;
    headers?: ApiCommon_.Headers;
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.type({
      customerId: Units_.IdentityId,
      userId: Units_.IdentityId,
      payload: Subscription_.SubscriptionUpdatePayload,
    }),
    t.partial({
      replace: t.boolean,
      immediate: t.boolean,
      headers: ApiCommon_.Headers,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      customerId: Units_.IdentityId;
      userId: Units_.IdentityId;
      replace?: boolean;
      immediate?: boolean;
      payload: Subscription_.SubscriptionUpdatePayload;
      headers?: ApiCommon_.Headers;
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
