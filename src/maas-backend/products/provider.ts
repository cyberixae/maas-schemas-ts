/*

undefined
MaaS product provider schema

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as Common_ from 'maas-schemas-ts/core/components/common';
import * as Units_ from 'maas-schemas-ts/core/components/units';
import * as PersonalDataAllowItem_ from 'maas-schemas-ts/core/components/personalDataAllowItem';

export const schemaId = 'http://maasglobal.com/maas-backend/products/provider.json';
// Default
// The default export. More information at the top.
export type Default = t.Branded<
  {
    name?: string;
    agencyId?: Common_.AgencyId;
    groupId?: string;
    hidden?: boolean;
    branding?: {
      primaryColor?: string;
      secondaryColor?: string;
      icon?: Units_.Url;
      logoSolidColor?: Units_.Url;
      logoFullColor?: Units_.Url;
    };
    features?: {
      ticket?: boolean;
      stationsList?: boolean;
      stationsRetrieve?: boolean;
    } & {
      ticket: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
      stationsList:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      stationsRetrieve:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
    };
    extra?: {
      radius?: {
        fixedFareAmount?: number;
        fixedFareCurrency?: Units_.Currency | (string & ('WMP' | 'TOKEN'));
        maxRadiusMetres?: number;
        description?: string;
      } & {
        fixedFareAmount:
          | Record<string, unknown>
          | Array<unknown>
          | string
          | boolean
          | number
          | null;
        fixedFareCurrency:
          | Record<string, unknown>
          | Array<unknown>
          | string
          | boolean
          | number
          | null;
        maxRadiusMetres:
          | Record<string, unknown>
          | Array<unknown>
          | string
          | boolean
          | number
          | null;
      };
      prebookingSupported?: boolean;
    };
    personalDataOptionsAllow?: Array<PersonalDataAllowItem_.Default>;
    personalDataCreateAllow?: Array<PersonalDataAllowItem_.Default>;
    optionalParameters?: Array<
      {
        id?: string;
        name?: string;
        type?: 'oneOf' | 'someOf' | 'allOf' | 'oneOrNoneOf' | 'someOrNoneOf';
        userSelectable?: boolean;
        inputs?: Array<
          {
            id?: string;
            name?: string;
            type?: 'string' | 'number' | 'boolean' | 'station';
            default?: string | number | boolean;
          } & {
            id:
              | Record<string, unknown>
              | Array<unknown>
              | string
              | boolean
              | number
              | null;
            name:
              | Record<string, unknown>
              | Array<unknown>
              | string
              | boolean
              | number
              | null;
            type:
              | Record<string, unknown>
              | Array<unknown>
              | string
              | boolean
              | number
              | null;
          }
        >;
      } & {
        id: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
        name: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
        inputs:
          | Record<string, unknown>
          | Array<unknown>
          | string
          | boolean
          | number
          | null;
      }
    >;
  } & {
    name: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
    agencyId: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
    groupId: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
    branding: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
    hidden: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
    features: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
    personalDataOptionsAllow:
      | Record<string, unknown>
      | Array<unknown>
      | string
      | boolean
      | number
      | null;
    personalDataCreateAllow:
      | Record<string, unknown>
      | Array<unknown>
      | string
      | boolean
      | number
      | null;
    optionalParameters:
      | Record<string, unknown>
      | Array<unknown>
      | string
      | boolean
      | number
      | null;
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.partial({
      name: t.string,
      agencyId: Common_.AgencyId,
      groupId: t.string,
      hidden: t.boolean,
      branding: t.partial({
        primaryColor: t.string,
        secondaryColor: t.string,
        icon: Units_.Url,
        logoSolidColor: Units_.Url,
        logoFullColor: Units_.Url,
      }),
      features: t.intersection([
        t.partial({
          ticket: t.boolean,
          stationsList: t.boolean,
          stationsRetrieve: t.boolean,
        }),
        t.type({
          ticket: t.union([
            t.UnknownRecord,
            t.UnknownArray,
            t.string,
            t.boolean,
            t.number,
            t.null,
          ]),
          stationsList: t.union([
            t.UnknownRecord,
            t.UnknownArray,
            t.string,
            t.boolean,
            t.number,
            t.null,
          ]),
          stationsRetrieve: t.union([
            t.UnknownRecord,
            t.UnknownArray,
            t.string,
            t.boolean,
            t.number,
            t.null,
          ]),
        }),
      ]),
      extra: t.partial({
        radius: t.intersection([
          t.partial({
            fixedFareAmount: t.number,
            fixedFareCurrency: t.union([
              Units_.Currency,
              t.intersection([t.string, t.union([t.literal('WMP'), t.literal('TOKEN')])]),
            ]),
            maxRadiusMetres: t.number,
            description: t.string,
          }),
          t.type({
            fixedFareAmount: t.union([
              t.UnknownRecord,
              t.UnknownArray,
              t.string,
              t.boolean,
              t.number,
              t.null,
            ]),
            fixedFareCurrency: t.union([
              t.UnknownRecord,
              t.UnknownArray,
              t.string,
              t.boolean,
              t.number,
              t.null,
            ]),
            maxRadiusMetres: t.union([
              t.UnknownRecord,
              t.UnknownArray,
              t.string,
              t.boolean,
              t.number,
              t.null,
            ]),
          }),
        ]),
        prebookingSupported: t.boolean,
      }),
      personalDataOptionsAllow: t.array(PersonalDataAllowItem_.Default),
      personalDataCreateAllow: t.array(PersonalDataAllowItem_.Default),
      optionalParameters: t.array(
        t.intersection([
          t.partial({
            id: t.string,
            name: t.string,
            type: t.union([
              t.literal('oneOf'),
              t.literal('someOf'),
              t.literal('allOf'),
              t.literal('oneOrNoneOf'),
              t.literal('someOrNoneOf'),
            ]),
            userSelectable: t.boolean,
            inputs: t.array(
              t.intersection([
                t.partial({
                  id: t.string,
                  name: t.string,
                  type: t.union([
                    t.literal('string'),
                    t.literal('number'),
                    t.literal('boolean'),
                    t.literal('station'),
                  ]),
                  default: t.union([t.string, t.number, t.boolean]),
                }),
                t.type({
                  id: t.union([
                    t.UnknownRecord,
                    t.UnknownArray,
                    t.string,
                    t.boolean,
                    t.number,
                    t.null,
                  ]),
                  name: t.union([
                    t.UnknownRecord,
                    t.UnknownArray,
                    t.string,
                    t.boolean,
                    t.number,
                    t.null,
                  ]),
                  type: t.union([
                    t.UnknownRecord,
                    t.UnknownArray,
                    t.string,
                    t.boolean,
                    t.number,
                    t.null,
                  ]),
                }),
              ]),
            ),
          }),
          t.type({
            id: t.union([
              t.UnknownRecord,
              t.UnknownArray,
              t.string,
              t.boolean,
              t.number,
              t.null,
            ]),
            name: t.union([
              t.UnknownRecord,
              t.UnknownArray,
              t.string,
              t.boolean,
              t.number,
              t.null,
            ]),
            inputs: t.union([
              t.UnknownRecord,
              t.UnknownArray,
              t.string,
              t.boolean,
              t.number,
              t.null,
            ]),
          }),
        ]),
      ),
    }),
    t.type({
      name: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      agencyId: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      groupId: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      branding: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      hidden: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      features: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      personalDataOptionsAllow: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      personalDataCreateAllow: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      optionalParameters: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      name?: string;
      agencyId?: Common_.AgencyId;
      groupId?: string;
      hidden?: boolean;
      branding?: {
        primaryColor?: string;
        secondaryColor?: string;
        icon?: Units_.Url;
        logoSolidColor?: Units_.Url;
        logoFullColor?: Units_.Url;
      };
      features?: {
        ticket?: boolean;
        stationsList?: boolean;
        stationsRetrieve?: boolean;
      } & {
        ticket:
          | Record<string, unknown>
          | Array<unknown>
          | string
          | boolean
          | number
          | null;
        stationsList:
          | Record<string, unknown>
          | Array<unknown>
          | string
          | boolean
          | number
          | null;
        stationsRetrieve:
          | Record<string, unknown>
          | Array<unknown>
          | string
          | boolean
          | number
          | null;
      };
      extra?: {
        radius?: {
          fixedFareAmount?: number;
          fixedFareCurrency?: Units_.Currency | (string & ('WMP' | 'TOKEN'));
          maxRadiusMetres?: number;
          description?: string;
        } & {
          fixedFareAmount:
            | Record<string, unknown>
            | Array<unknown>
            | string
            | boolean
            | number
            | null;
          fixedFareCurrency:
            | Record<string, unknown>
            | Array<unknown>
            | string
            | boolean
            | number
            | null;
          maxRadiusMetres:
            | Record<string, unknown>
            | Array<unknown>
            | string
            | boolean
            | number
            | null;
        };
        prebookingSupported?: boolean;
      };
      personalDataOptionsAllow?: Array<PersonalDataAllowItem_.Default>;
      personalDataCreateAllow?: Array<PersonalDataAllowItem_.Default>;
      optionalParameters?: Array<
        {
          id?: string;
          name?: string;
          type?: 'oneOf' | 'someOf' | 'allOf' | 'oneOrNoneOf' | 'someOrNoneOf';
          userSelectable?: boolean;
          inputs?: Array<
            {
              id?: string;
              name?: string;
              type?: 'string' | 'number' | 'boolean' | 'station';
              default?: string | number | boolean;
            } & {
              id:
                | Record<string, unknown>
                | Array<unknown>
                | string
                | boolean
                | number
                | null;
              name:
                | Record<string, unknown>
                | Array<unknown>
                | string
                | boolean
                | number
                | null;
              type:
                | Record<string, unknown>
                | Array<unknown>
                | string
                | boolean
                | number
                | null;
            }
          >;
        } & {
          id: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
          name:
            | Record<string, unknown>
            | Array<unknown>
            | string
            | boolean
            | number
            | null;
          inputs:
            | Record<string, unknown>
            | Array<unknown>
            | string
            | boolean
            | number
            | null;
        }
      >;
    } & {
      name: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
      agencyId:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      groupId:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      branding:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      hidden: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
      features:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      personalDataOptionsAllow:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      personalDataCreateAllow:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      optionalParameters:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
