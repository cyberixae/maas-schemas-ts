/*

undefined
MaaS customer payment sources setup intent create response

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as Common_ from 'src/core/components/common';
import * as PaymentSource_ from 'src/maas-backend/customers/payment-sources/paymentSource';

export const schemaId =
  'http://maasglobal.com/maas-backend/customers/payment-sources/setup-intent/response.json';
// Default
// The purpose of this remains a mystery
export type Default = t.Branded<
  {
    setupIntent: {
      setupIntentId: Common_.PaymentSourceId;
      type: PaymentSource_.Type;
      gatewayName: PaymentSource_.GatewayName;
      clientSecret?: string;
      isDefault: boolean;
      alias?: PaymentSource_.Alias;
      status: PaymentSource_.Status;
    };
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.type({
    setupIntent: t.intersection([
      t.type({
        setupIntentId: Common_.PaymentSourceId,
        type: PaymentSource_.Type,
        gatewayName: PaymentSource_.GatewayName,
        isDefault: t.boolean,
        status: PaymentSource_.Status,
      }),
      t.partial({
        clientSecret: t.string,
        alias: PaymentSource_.Alias,
      }),
    ]),
  }),
  (
    x,
  ): x is t.Branded<
    {
      setupIntent: {
        setupIntentId: Common_.PaymentSourceId;
        type: PaymentSource_.Type;
        gatewayName: PaymentSource_.GatewayName;
        clientSecret?: string;
        isDefault: boolean;
        alias?: PaymentSource_.Alias;
        status: PaymentSource_.Status;
      };
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
