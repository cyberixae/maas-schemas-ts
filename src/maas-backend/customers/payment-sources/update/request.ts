/*

undefined
MaaS customer payment sources update

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as Units_ from 'src/core/components/units';
import * as PaymentSource_ from 'src/maas-backend/customers/payment-sources/paymentSource';
import * as ApiCommon_ from 'src/core/components/api-common';

export const schemaId =
  'http://maasglobal.com/maas-backend/customers/payment-sources/update/request.json';
// Default
// The default export. More information at the top.
export type Default = t.Branded<
  {
    identityId?: Units_.IdentityId;
    customerId?: Units_.IdentityId;
    paymentSourceId?: PaymentSource_.PaymentSourceId;
    payload?: {
      paymentSource?: {
        isDefault?: true;
        alias?: PaymentSource_.Alias;
      } & (
        | {
            isDefault: unknown;
          }
        | {
            alias: unknown;
          });
    } & {
      paymentSource: unknown;
    };
    headers?: ApiCommon_.Headers;
  } & {
    identityId: unknown;
    customerId: unknown;
    paymentSourceId: unknown;
    payload: unknown;
    headers: unknown;
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.partial({
      identityId: Units_.IdentityId,
      customerId: Units_.IdentityId,
      paymentSourceId: PaymentSource_.PaymentSourceId,
      payload: t.intersection([
        t.partial({
          paymentSource: t.intersection([
            t.partial({
              isDefault: t.literal(true),
              alias: PaymentSource_.Alias,
            }),
            t.union([
              t.type({
                isDefault: t.unknown,
              }),
              t.type({
                alias: t.unknown,
              }),
            ]),
          ]),
        }),
        t.type({
          paymentSource: t.unknown,
        }),
      ]),
      headers: ApiCommon_.Headers,
    }),
    t.type({
      identityId: t.unknown,
      customerId: t.unknown,
      paymentSourceId: t.unknown,
      payload: t.unknown,
      headers: t.unknown,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      identityId?: Units_.IdentityId;
      customerId?: Units_.IdentityId;
      paymentSourceId?: PaymentSource_.PaymentSourceId;
      payload?: {
        paymentSource?: {
          isDefault?: true;
          alias?: PaymentSource_.Alias;
        } & (
          | {
              isDefault: unknown;
            }
          | {
              alias: unknown;
            });
      } & {
        paymentSource: unknown;
      };
      headers?: ApiCommon_.Headers;
    } & {
      identityId: unknown;
      customerId: unknown;
      paymentSourceId: unknown;
      payload: unknown;
      headers: unknown;
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
