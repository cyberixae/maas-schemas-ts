/*

undefined
MaaS geocoding query request schema.

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as Units_ from 'src/core/components/units';
import * as UnitsGeo_ from 'src/core/components/units-geo';
import * as I18n_ from 'src/core/components/i18n';
import * as ApiCommon_ from 'src/core/components/api-common';

export const schemaId =
  'http://maasglobal.com/maas-backend/geocoding/geocoding-query/request.json';
// Default
// The default export. More information at the top.
export type Default = t.Branded<
  {
    identityId?: Units_.IdentityId;
    payload: {
      name: string;
      lat: UnitsGeo_.RelaxedLatitude;
      lon: UnitsGeo_.RelaxedLongitude;
      count?: number;
      distance?: UnitsGeo_.Distance;
      locale?: I18n_.Locale;
    };
    headers?: ApiCommon_.Headers;
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.type({
      payload: t.intersection([
        t.type({
          name: t.string,
          lat: UnitsGeo_.RelaxedLatitude,
          lon: UnitsGeo_.RelaxedLongitude,
        }),
        t.partial({
          count: t.number,
          distance: UnitsGeo_.Distance,
          locale: I18n_.Locale,
        }),
      ]),
    }),
    t.partial({
      identityId: Units_.IdentityId,
      headers: ApiCommon_.Headers,
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      identityId?: Units_.IdentityId;
      payload: {
        name: string;
        lat: UnitsGeo_.RelaxedLatitude;
        lon: UnitsGeo_.RelaxedLongitude;
        count?: number;
        distance?: UnitsGeo_.Distance;
        locale?: I18n_.Locale;
      };
      headers?: ApiCommon_.Headers;
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
