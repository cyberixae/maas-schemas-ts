/*

undefined
MaaS Zendesk push notification forwarder request schema.

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';

export const schemaId =
  'http://maasglobal.com/maas-backend/webhooks/zendesk-push-notification/request.json';
// Default
// The default export. More information at the top.
export type Default = t.Branded<
  {
    devices?: Array<{
      identifier: {} | null;
      type: {} | null;
    }>;
    notification?: {
      body?: string;
      title?: string;
      ticket_id?: string;
    };
  } & {
    devices: {} | null;
    notification: {} | null;
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.partial({
      devices: t.array(
        t.type({
          identifier: t.union([t.type({}), t.null]),
          type: t.union([t.type({}), t.null]),
        }),
      ),
      notification: t.partial({
        body: t.string,
        title: t.string,
        ticket_id: t.string,
      }),
    }),
    t.type({
      devices: t.union([t.type({}), t.null]),
      notification: t.union([t.type({}), t.null]),
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      devices?: Array<{
        identifier: {} | null;
        type: {} | null;
      }>;
      notification?: {
        body?: string;
        title?: string;
        ticket_id?: string;
      };
    } & {
      devices: {} | null;
      notification: {} | null;
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
