/*

undefined
MaaS Zendesk push notification forwarder response schema.

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';

export const schemaId =
  'http://maasglobal.com/maas-backend/webhooks/zendesk-push-notification/response.json';
// Default
// The default export. More information at the top.
export type Default = t.Branded<
  {
    results?: {
      successCount:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      failureCount:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
    };
  } & {
    results: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.partial({
      results: t.type({
        successCount: t.union([
          t.UnknownRecord,
          t.UnknownArray,
          t.string,
          t.boolean,
          t.number,
          t.null,
        ]),
        failureCount: t.union([
          t.UnknownRecord,
          t.UnknownArray,
          t.string,
          t.boolean,
          t.number,
          t.null,
        ]),
      }),
    }),
    t.type({
      results: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      results?: {
        successCount:
          | Record<string, unknown>
          | Array<unknown>
          | string
          | boolean
          | number
          | null;
        failureCount:
          | Record<string, unknown>
          | Array<unknown>
          | string
          | boolean
          | number
          | null;
      };
    } & {
      results:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
