/*

undefined
Response schema for profile-devices-put

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as Units_ from 'src/core/components/units';

export const schemaId =
  'http://maasglobal.com/maas-backend/profile/profile-devices-put/response.json';
// Device
// The purpose of this remains a mystery
export type Device = t.Branded<
  {
    devicePushToken: string;
    deviceIdentifier: Units_.Uuid;
    deviceType: string & ('iOS' | 'Android');
  },
  DeviceBrand
>;
export const Device = t.brand(
  t.type({
    devicePushToken: t.string,
    deviceIdentifier: Units_.Uuid,
    deviceType: t.intersection([
      t.string,
      t.union([t.literal('iOS'), t.literal('Android')]),
    ]),
  }),
  (
    x,
  ): x is t.Branded<
    {
      devicePushToken: string;
      deviceIdentifier: Units_.Uuid;
      deviceType: string & ('iOS' | 'Android');
    },
    DeviceBrand
  > => true,
  'Device',
);
export interface DeviceBrand {
  readonly Device: unique symbol;
}
// Default
// The purpose of this remains a mystery
export type Default = t.Branded<
  {
    device: Device;
    debug?: {};
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.type({
      device: Device,
    }),
    t.partial({
      debug: t.type({}),
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      device: Device;
      debug?: {};
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
