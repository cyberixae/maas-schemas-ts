/*

undefined
Response schema for profile-devices-put

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as Units_ from 'maas-schemas-ts/core/components/units';

export const schemaId =
  'http://maasglobal.com/maas-backend/profile/profile-devices-put/response.json';
// Device
// The purpose of this remains a mystery
export type Device = t.Branded<
  {
    devicePushToken?: string;
    deviceIdentifier?: Units_.Uuid;
    deviceType?: string & ('iOS' | 'Android');
  } & {
    devicePushToken:
      | Record<string, unknown>
      | Array<unknown>
      | string
      | boolean
      | number
      | null;
    deviceIdentifier:
      | Record<string, unknown>
      | Array<unknown>
      | string
      | boolean
      | number
      | null;
    deviceType:
      | Record<string, unknown>
      | Array<unknown>
      | string
      | boolean
      | number
      | null;
  },
  DeviceBrand
>;
export const Device = t.brand(
  t.intersection([
    t.partial({
      devicePushToken: t.string,
      deviceIdentifier: Units_.Uuid,
      deviceType: t.intersection([
        t.string,
        t.union([t.literal('iOS'), t.literal('Android')]),
      ]),
    }),
    t.type({
      devicePushToken: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      deviceIdentifier: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
      deviceType: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      devicePushToken?: string;
      deviceIdentifier?: Units_.Uuid;
      deviceType?: string & ('iOS' | 'Android');
    } & {
      devicePushToken:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      deviceIdentifier:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
      deviceType:
        | Record<string, unknown>
        | Array<unknown>
        | string
        | boolean
        | number
        | null;
    },
    DeviceBrand
  > => true,
  'Device',
);
export interface DeviceBrand {
  readonly Device: unique symbol;
}
// Default
// The default export. More information at the top.
export type Default = t.Branded<
  {
    device?: Device;
    debug?: {};
  } & {
    device: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.partial({
      device: Device,
      debug: t.type({}),
    }),
    t.type({
      device: t.union([
        t.UnknownRecord,
        t.UnknownArray,
        t.string,
        t.boolean,
        t.number,
        t.null,
      ]),
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      device?: Device;
      debug?: {};
    } & {
      device: Record<string, unknown> | Array<unknown> | string | boolean | number | null;
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
