/*

undefined
MaaS bike station schema

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as UnitsGeo_ from './units-geo';

export const schemaId = 'http://maasglobal.com/core/components/bike-station.json';
// Default
// The default export. More information at the top.
export type Default = t.Branded<
  {
    id: string;
    name: string;
    location: UnitsGeo_.Location;
    slots?: {
      total: number;
      empty: number;
      bikes: number;
    };
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.intersection([
    t.type({
      id: t.string,
      name: t.string,
      location: UnitsGeo_.Location,
    }),
    t.partial({
      slots: t.type({
        total: t.number,
        empty: t.number,
        bikes: t.number,
      }),
    }),
  ]),
  (
    x,
  ): x is t.Branded<
    {
      id: string;
      name: string;
      location: UnitsGeo_.Location;
      slots?: {
        total: number;
        empty: number;
        bikes: number;
      };
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
